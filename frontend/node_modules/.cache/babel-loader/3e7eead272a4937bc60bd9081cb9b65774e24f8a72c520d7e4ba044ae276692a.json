{"ast":null,"code":"var _jsxFileName = \"/Users/gowrisankara/Desktop/planr/src/components/Task.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { PrimaryButton, svgIconStyle, TaskGroup, TaskItem } from \"./Utility\";\nimport styled from \"styled-components\";\nimport { useCookies } from \"react-cookie\";\nimport { toast } from \"react-toastify\";\nimport Suggested from \"./Suggested\";\n\n// Styled components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingMessage = styled.p`\n  text-align: center;\n  font-size: 1.2em;\n`;\n_c = LoadingMessage;\nconst NoTasksMessage = styled.p`\n  text-align: center;\n  font-size: 1.2em;\n  color: #888;\n`;\n_c2 = NoTasksMessage;\nconst TaskContainer = styled(TaskItem)`\n  display: flex;\n  flex-direction: row;\n  background: ${props => props.completionType === \"completed\" ? \"rgb(204, 204, 204)\" : \"rgb(247, 247, 247)\"};\n  padding: 24px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 16px;\n`;\n_c3 = TaskContainer;\nconst TaskHeader = styled.h2`\n  margin: 0;\n  font-size: 1.5em;\n`;\n_c4 = TaskHeader;\nconst TaskDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c5 = TaskDetails;\nconst CompletionInfo = styled.p`\n  color: ${props => props.color};\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  margin: 0;\n`;\n_c6 = CompletionInfo;\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n_c7 = ActionButtons;\nconst EditButton = styled(PrimaryButton)`\n  height: 20px;\n  background: rgb(235, 235, 235);\n  color: black;\n\n  &:hover {\n    background: rgb(249, 206, 137);\n    color: black;\n  }\n`;\n_c8 = EditButton;\nconst CompleteButton = styled(PrimaryButton)`\n  height: 20px;\n  color: white;\n  background: ${props => props.color};\n`;\n_c9 = CompleteButton;\nconst Tooltip = styled.div`\n  position: absolute;\n  bottom: 125%; // Position above the button\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: black;\n  color: white;\n  padding: 5px;\n  border-radius: 4px;\n  visibility: hidden;\n  opacity: 0;\n  transition: opacity 0.3s;\n  z-index: 1;\n\n  ${ActionButtons}:hover & {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n_c10 = Tooltip;\nfunction Task() {\n  _s();\n  const navigate = useNavigate();\n  const [tasks, setTasks] = useState([]);\n  const [cookies] = useCookies(['jwt']);\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const arr = [\"\", \"live\", \"completed\", \"timeup\"];\n  const [reload, setReload] = useState(false);\n  const queryParams = new URLSearchParams(location.search);\n  const queryString = queryParams.get('query') ? `?search=${queryParams.get('query')}` : \"\";\n  const setAsCompleted = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/completed/${id}`, {\n        method: \"POST\",\n        headers: {\n          'Authorization': `Bearer ${cookies.jwt}`\n        }\n      });\n      if (response.ok) {\n        setTasks(tasks => tasks.map(task => task.taskId === id ? {\n          ...task,\n          completionType: 'completed'\n        } : task));\n        setReload(true);\n      } else {\n        toast('Failed to mark as completed', response.statusText);\n        console.error('Failed to mark as completed', response.statusText);\n      }\n    } catch (error) {\n      toast('Error marking as completed', error);\n      console.error('Error marking as completed', error);\n    }\n  };\n  const setAsLive = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/live/${id}`, {\n        method: \"POST\",\n        headers: {\n          'Authorization': `Bearer ${cookies.jwt}`\n        }\n      });\n      if (response.ok) {\n        setTasks(tasks => tasks.map(task => task.taskId === id ? {\n          ...task,\n          completionType: 'live'\n        } : task));\n        setReload(true);\n      } else {\n        const errorData = await response.json(); // Get error details if available\n        toast.error(`Failed to mark as live: ${errorData.message || response.statusText}`);\n        console.error('Failed to mark as live', response.statusText);\n      }\n    } catch (error) {\n      toast('Error marking as live', error);\n      console.error('Error marking as live', error);\n    }\n  };\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setLoading(true);\n      try {\n        const url = arr.includes(location.pathname.slice(1).toLowerCase()) ? `http://localhost:5000/task/${location.pathname.slice(1).toLowerCase() || 'today'}${queryString}` : `http://localhost:5000/task/category/${location.pathname.slice(1).toLowerCase()}${queryString}`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${cookies.jwt}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n          setReload(false);\n        } else {\n          console.error('Failed to fetch tasks:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, [cookies.jwt, location.pathname, queryString, reload]);\n  const getStyle = type => {\n    switch (type) {\n      case \"live\":\n        return {\n          background: 'transparent',\n          color: 'green',\n          border: '1px solid green',\n          svgFill: 'green'\n        };\n      case \"completed\":\n        return {\n          background: 'green',\n          color: 'white',\n          border: '1px solid green',\n          svgFill: 'white'\n        };\n      case \"timeup\":\n        return {\n          background: 'transparent',\n          color: 'red',\n          border: '1px solid red',\n          svgFill: 'red'\n        };\n      default:\n        return {\n          background: 'transparent',\n          color: 'black',\n          border: '1px solid transparent',\n          svgFill: 'black'\n        };\n    }\n  };\n  const formatDate = date => {\n    return `${new Date(date).getDate()} ${new Intl.DateTimeFormat('en-US', {\n      month: 'short'\n    }).format(new Date(date)).toUpperCase()} - ${new Date(date).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    })}`;\n  };\n  return /*#__PURE__*/_jsxDEV(TaskGroup, {\n    children: [location.pathname.slice(1).toLowerCase() === \"\" && /*#__PURE__*/_jsxDEV(Suggested, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 59\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingMessage, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this) : tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(TaskContainer, {\n      completionType: task.completionType,\n      children: [/*#__PURE__*/_jsxDEV(TaskDetails, {\n        children: [/*#__PURE__*/_jsxDEV(TaskHeader, {\n          children: task.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          children: \"hububs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CompletionInfo, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#5189b9',\n              fontWeight: '600'\n            },\n            children: task.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: '0 8px',\n              color: \"#7b7b7b\"\n            },\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#7b7b7b',\n              fontWeight: '600'\n            },\n            children: formatDate(task.time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n        children: [task.completionType !== 'completed' && /*#__PURE__*/_jsxDEV(EditButton, {\n          onClick: () => navigate(`?update=${task.taskId}`),\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            style: {\n              ...svgIconStyle,\n              fill: \"black\",\n              height: \"20px\",\n              width: \"20px\"\n            },\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M14.06,9L15,9.94L5.92,19H5V18.08L14.06,9M17.66,3C17.41,3 17.15,3.1 16.96,3.29L15.13,5.12L18.88,8.87L20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18.17,3.09 17.92,3 17.66,3M14.06,6.19L3,17.25V21H6.75L17.81,9.94L14.06,6.19Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CompleteButton, {\n          style: getStyle(task.completionType),\n          onClick: () => {\n            if (task.completionType === \"live\") {\n              setAsCompleted(task.taskId);\n            } else if (task.completionType === \"completed\") {\n              setAsLive(task.taskId);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            children: task.completionType === \"live\" ? \"Complete\" : \"Reopen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), task.completionType === \"live\" && /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            style: {\n              height: '20px',\n              width: '20px',\n              fill: 'green',\n              marginRight: '4px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 19\n          }, this), task.completionType === \"completed\" && /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            style: {\n              height: '20px',\n              width: '20px',\n              fill: 'white',\n              marginRight: '4px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this), task.completionType === \"timeup\" && /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            style: {\n              height: '20px',\n              width: '20px',\n              fill: 'red',\n              marginRight: '4px'\n            },\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12,20A7,7 0 0,1 5,13A7,7 0 0,1 12,6A7,7 0 0,1 19,13A7,7 0 0,1 12,20M12,4A9,9 0 0,0 3,13A9,9 0 0,0 12,22A9,9 0 0,0 21,13A9,9 0 0,0 12,4M12.5,8H11V14L15.75,16.85L16.5,15.62L12.5,13.25V8M7.88,3.39L6.6,1.86L2,5.71L3.29,7.24L7.88,3.39M22,5.72L17.4,1.86L16.11,3.39L20.71,7.25L22,5.72Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, task.taskId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(NoTasksMessage, {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"IyehEXuF7ancOnNuzHoxI/YdtCw=\", false, function () {\n  return [useNavigate, useCookies, useLocation];\n});\n_c11 = Task;\nexport default Task;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"LoadingMessage\");\n$RefreshReg$(_c2, \"NoTasksMessage\");\n$RefreshReg$(_c3, \"TaskContainer\");\n$RefreshReg$(_c4, \"TaskHeader\");\n$RefreshReg$(_c5, \"TaskDetails\");\n$RefreshReg$(_c6, \"CompletionInfo\");\n$RefreshReg$(_c7, \"ActionButtons\");\n$RefreshReg$(_c8, \"EditButton\");\n$RefreshReg$(_c9, \"CompleteButton\");\n$RefreshReg$(_c10, \"Tooltip\");\n$RefreshReg$(_c11, \"Task\");","map":{"version":3,"names":["useEffect","useState","useLocation","useNavigate","PrimaryButton","svgIconStyle","TaskGroup","TaskItem","styled","useCookies","toast","Suggested","jsxDEV","_jsxDEV","LoadingMessage","p","_c","NoTasksMessage","_c2","TaskContainer","props","completionType","_c3","TaskHeader","h2","_c4","TaskDetails","div","_c5","CompletionInfo","color","_c6","ActionButtons","_c7","EditButton","_c8","CompleteButton","_c9","Tooltip","_c10","Task","_s","navigate","tasks","setTasks","cookies","location","loading","setLoading","arr","reload","setReload","queryParams","URLSearchParams","search","queryString","get","setAsCompleted","id","response","fetch","method","headers","jwt","ok","map","task","taskId","statusText","console","error","setAsLive","errorData","json","message","fetchTasks","url","includes","pathname","slice","toLowerCase","data","getStyle","type","background","border","svgFill","formatDate","date","Date","getDate","Intl","DateTimeFormat","month","format","toUpperCase","toLocaleTimeString","hour","minute","hour12","children","fileName","_jsxFileName","lineNumber","columnNumber","length","taskName","style","fontWeight","category","margin","time","onClick","fill","height","width","xmlns","viewBox","d","marginRight","_c11","$RefreshReg$"],"sources":["/Users/gowrisankara/Desktop/planr/src/components/Task.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { PrimaryButton, svgIconStyle, TaskGroup, TaskItem } from \"./Utility\";\nimport styled from \"styled-components\";\nimport { useCookies } from \"react-cookie\";\nimport { toast } from \"react-toastify\";\nimport Suggested from \"./Suggested\";\n\n// Styled components\nconst LoadingMessage = styled.p`\n  text-align: center;\n  font-size: 1.2em;\n`;\n\nconst NoTasksMessage = styled.p`\n  text-align: center;\n  font-size: 1.2em;\n  color: #888;\n`;\n\nconst TaskContainer = styled(TaskItem)`\n  display: flex;\n  flex-direction: row;\n  background: ${(props) => (props.completionType === \"completed\" ? \"rgb(204, 204, 204)\" : \"rgb(247, 247, 247)\")};\n  padding: 24px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 16px;\n`;\n\nconst TaskHeader = styled.h2`\n  margin: 0;\n  font-size: 1.5em;\n`;\n\nconst TaskDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst CompletionInfo = styled.p`\n  color: ${(props) => props.color};\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  margin: 0;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nconst EditButton = styled(PrimaryButton)`\n  height: 20px;\n  background: rgb(235, 235, 235);\n  color: black;\n\n  &:hover {\n    background: rgb(249, 206, 137);\n    color: black;\n  }\n`;\n\nconst CompleteButton = styled(PrimaryButton)`\n  height: 20px;\n  color: white;\n  background: ${(props) => props.color};\n`;\n\nconst Tooltip = styled.div`\n  position: absolute;\n  bottom: 125%; // Position above the button\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: black;\n  color: white;\n  padding: 5px;\n  border-radius: 4px;\n  visibility: hidden;\n  opacity: 0;\n  transition: opacity 0.3s;\n  z-index: 1;\n\n  ${ActionButtons}:hover & {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n\nfunction Task() {\n  const navigate = useNavigate();\n  const [tasks, setTasks] = useState([]);\n  const [cookies] = useCookies(['jwt']);\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const arr = [\"\", \"live\", \"completed\", \"timeup\"];\n  const [reload, setReload] = useState(false);\n\n  const queryParams = new URLSearchParams(location.search);\n  const queryString = queryParams.get('query') ? `?search=${queryParams.get('query')}` : \"\";\n\n  const setAsCompleted = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/completed/${id}`, {\n        method: \"POST\",\n        headers: { 'Authorization': `Bearer ${cookies.jwt}` }\n      });\n      if (response.ok) {\n        setTasks(tasks => tasks.map(task => task.taskId === id ? { ...task, completionType: 'completed' } : task));\n        setReload(true);\n      } else {\n        toast('Failed to mark as completed', response.statusText);\n        console.error('Failed to mark as completed', response.statusText);\n      }\n    } catch (error) {\n      toast('Error marking as completed', error)\n      console.error('Error marking as completed', error);\n    }\n  };\n\n  const setAsLive = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/live/${id}`, {\n        method: \"POST\",\n        headers: { 'Authorization': `Bearer ${cookies.jwt}` }\n      });\n      if (response.ok) {\n        setTasks(tasks => tasks.map(task => task.taskId === id ? { ...task, completionType: 'live' } : task));\n        setReload(true);\n      } else {\n        const errorData = await response.json(); // Get error details if available\n        toast.error(`Failed to mark as live: ${errorData.message || response.statusText}`);\n        console.error('Failed to mark as live', response.statusText);\n      }\n    } catch (error) {\n      toast('Error marking as live', error)\n      console.error('Error marking as live', error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setLoading(true);\n      try {\n        const url = arr.includes(location.pathname.slice(1).toLowerCase())\n          ? `http://localhost:5000/task/${location.pathname.slice(1).toLowerCase() || 'today'}${queryString}`\n          : `http://localhost:5000/task/category/${location.pathname.slice(1).toLowerCase()}${queryString}`;\n\n        const response = await fetch(url, {\n          headers: { 'Authorization': `Bearer ${cookies.jwt}` }\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n          setReload(false);\n        } else {\n          console.error('Failed to fetch tasks:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTasks();\n  }, [cookies.jwt, location.pathname, queryString, reload]);\n\n  const getStyle = (type) => {\n    switch (type) {\n      case \"live\":\n        return {\n          background: 'transparent',\n          color: 'green', \n          border: '1px solid green',\n          svgFill: 'green',\n        };\n      case \"completed\":\n        return {\n          background: 'green',\n          color: 'white',\n          border: '1px solid green',\n          svgFill: 'white',\n        };\n      case \"timeup\":\n        return {\n          background: 'transparent',\n          color: 'red',\n          border: '1px solid red',\n          svgFill: 'red',\n        };\n      default:\n        return {\n          background: 'transparent',\n          color: 'black',\n          border: '1px solid transparent',\n          svgFill: 'black',\n        };\n    }\n  };\n  \n  const formatDate = (date) => {\n    return `${new Date(date).getDate()} ${new Intl.DateTimeFormat('en-US', { month: 'short' }).format(new Date(date)).toUpperCase()} - ${new Date(date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true })}`;\n  };\n\n  return (\n    <TaskGroup>\n      {location.pathname.slice(1).toLowerCase() === \"\" && <Suggested />}\n      {loading ? (\n        <LoadingMessage>Loading...</LoadingMessage>\n      ) : tasks.length > 0 ? (\n        tasks.map((task) => (\n          <TaskContainer key={task.taskId} completionType={task.completionType}>\n            <TaskDetails>\n              <TaskHeader>{task.taskName}</TaskHeader>\n              <Tooltip>hububs</Tooltip>\n              <CompletionInfo>\n                <span style={{ color: '#5189b9', fontWeight: '600' }}>{task.category}</span>\n                <span style={{ margin: '0 8px', color: \"#7b7b7b\" }}>•</span>\n                <span style={{ color: '#7b7b7b', fontWeight: '600' }}>{formatDate(task.time)}</span>\n              </CompletionInfo>\n            </TaskDetails>\n            <ActionButtons>\n              {task.completionType !== 'completed' && (\n                <EditButton onClick={() => navigate(`?update=${task.taskId}`)}>\n                  <Tooltip>Edit</Tooltip>\n                  <svg style={{ ...svgIconStyle, fill: \"black\", height: \"20px\", width: \"20px\" }} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                    <path d=\"M14.06,9L15,9.94L5.92,19H5V18.08L14.06,9M17.66,3C17.41,3 17.15,3.1 16.96,3.29L15.13,5.12L18.88,8.87L20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18.17,3.09 17.92,3 17.66,3M14.06,6.19L3,17.25V21H6.75L17.81,9.94L14.06,6.19Z\" />\n                  </svg>\n                </EditButton>\n              )}\n              <CompleteButton style={getStyle(task.completionType)}\n                onClick={() => {\n                  if (task.completionType === \"live\") {\n                    setAsCompleted(task.taskId);\n                  } else if (task.completionType === \"completed\") {\n                    setAsLive(task.taskId);\n                  }\n                }}\n              >\n                <Tooltip>{task.completionType === \"live\" ? \"Complete\" : \"Reopen\"}</Tooltip>\n                {task.completionType === \"live\" && (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    style={{ height: '20px', width: '20px', fill: 'green', marginRight: '4px' }}\n                  >\n                    <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" />\n                  </svg>\n                )}\n                {task.completionType === \"completed\" && (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    style={{ height: '20px', width: '20px', fill: 'white', marginRight: '4px' }}\n                  >\n                    <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" />\n                  </svg>\n                )}\n                {task.completionType === \"timeup\" && (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ height: '20px', width: '20px', fill: 'red', marginRight: '4px' }} viewBox=\"0 0 24 24\">\n                    <path d=\"M12,20A7,7 0 0,1 5,13A7,7 0 0,1 12,6A7,7 0 0,1 19,13A7,7 0 0,1 12,20M12,4A9,9 0 0,0 3,13A9,9 0 0,0 12,22A9,9 0 0,0 21,13A9,9 0 0,0 12,4M12.5,8H11V14L15.75,16.85L16.5,15.62L12.5,13.25V8M7.88,3.39L6.6,1.86L2,5.71L3.29,7.24L7.88,3.39M22,5.72L17.4,1.86L16.11,3.39L20.71,7.25L22,5.72Z\" />\n                  </svg>\n                )}\n              </CompleteButton>\n            </ActionButtons>\n          </TaskContainer>\n        ))\n      ) : (\n        <NoTasksMessage>No tasks available.</NoTasksMessage>\n      )}\n    </TaskGroup>\n  );\n}\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}