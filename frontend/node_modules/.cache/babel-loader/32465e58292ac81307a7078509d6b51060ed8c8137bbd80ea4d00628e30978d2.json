{"ast":null,"code":"var _jsxFileName = \"/Users/gowrisankara/Desktop/planr/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport AuthLogin from './components/AuthLogin.jsx';\nimport AuthSignup from './components/AuthSignup.jsx';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport AuthRecovery from './components/AuthRecovery.jsx';\nimport GlobalContainer from './components/GlobalContainer.jsx';\nimport { useCookies } from 'react-cookie';\nimport { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Import Toastify CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  const [cookies] = useCookies(['jwt']);\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = cookies.jwt;\n      const currentPath = window.location.pathname;\n      if (token) {\n        try {\n          const response = await fetch('http://localhost:5000/verify', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (!response.ok) {\n            navigate(\"/login\");\n          }\n        } catch (error) {\n          console.error('Error verifying token:', error);\n          navigate(\"/login\");\n        }\n      } else {\n        // Only navigate to login if the current path is not one of the allowed routes\n        if (currentPath !== \"/login\" && currentPath !== \"/forgot-password\" && currentPath !== \"/signup\") {\n          navigate(\"/login\");\n        }\n      }\n    };\n    checkAuth();\n  }, [cookies, navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\",\n        element: /*#__PURE__*/_jsxDEV(AuthRecovery, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(AuthLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(AuthSignup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(GlobalContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"7q+dUW3bjtAeyHQYZrOw9SvVT74=\", false, function () {\n  return [useNavigate, useCookies];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AuthLogin","AuthSignup","Routes","Route","useNavigate","AuthRecovery","GlobalContainer","useCookies","useEffect","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navigate","cookies","checkAuth","token","jwt","currentPath","window","location","pathname","response","fetch","method","headers","ok","error","console","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","_c","$RefreshReg$"],"sources":["/Users/gowrisankara/Desktop/planr/src/App.js"],"sourcesContent":["import './App.css';\nimport AuthLogin from './components/AuthLogin.jsx';\nimport AuthSignup from './components/AuthSignup.jsx';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport AuthRecovery from './components/AuthRecovery.jsx';\nimport GlobalContainer from './components/GlobalContainer.jsx';\nimport { useCookies } from 'react-cookie';\nimport { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Import Toastify CSS\n\nfunction App() {\n  const navigate = useNavigate();\n  const [cookies] = useCookies(['jwt']);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = cookies.jwt;\n      const currentPath = window.location.pathname;\n  \n      if (token) {\n        try {\n          const response = await fetch('http://localhost:5000/verify', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n          });\n  \n          if (!response.ok) {\n            navigate(\"/login\");\n          }\n        } catch (error) {\n          console.error('Error verifying token:', error);\n          navigate(\"/login\");\n        }\n      } else {\n        // Only navigate to login if the current path is not one of the allowed routes\n        if (currentPath !== \"/login\" && currentPath !== \"/forgot-password\" && currentPath !== \"/signup\") {\n          navigate(\"/login\");\n        }\n      }\n    };\n  \n    checkAuth();\n  }, [cookies, navigate]);\n  \n  return (<>\n    <Routes>\n      <Route path=\"/forgot-password\" element={<AuthRecovery />} />\n      <Route path=\"/login\" element={<AuthLogin />} />\n      <Route path=\"/signup\" element={<AuthSignup />} />\n      <Route path=\"/*\" element={<GlobalContainer />} />\n    </Routes>\n    <ToastContainer \n    position=\"top-right\" \n    autoClose={5000} \n    hideProgressBar={false} \n    closeOnClick \n    pauseOnHover \n    draggable \n    theme=\"light\" \n  />\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}