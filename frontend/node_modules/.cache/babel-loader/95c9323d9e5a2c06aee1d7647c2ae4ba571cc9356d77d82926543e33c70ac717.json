{"ast":null,"code":"var _jsxFileName = \"/Users/gowrisankara/Desktop/planr/src/components/Stats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { TaskGroup, TaskItem } from \"./Utility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stats() {\n  _s();\n  const [stats, setStats] = useState({\n    completionRate: 0,\n    productivityChange: 0,\n    productiveTime: 'N/A',\n    productiveDay: 'N/A',\n    productiveCategory: 'N/A'\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/stats\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwt')}` // Adjust based on your auth method\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch stats\");\n        }\n        const data = await response.json();\n        setStats(data);\n      } catch (error) {\n        console.error(\"Error fetching stats:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStats();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(TaskGroup, {\n    style: {\n      flex: '0 0 35%',\n      padding: '20px',\n      border: '1px solid #ccc',\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskItem, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#276cab\",\n          fontSize: \"60px\",\n          fontWeight: \"800\",\n          margin: \"8px\",\n          textAlign: \"center\"\n        },\n        children: [stats.completionRate.toFixed(0), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"black\",\n          fontSize: \"20px\",\n          fontWeight: \"400\",\n          textAlign: \"center\"\n        },\n        children: \"Task completion rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskItem, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#008b10\",\n          fontSize: \"60px\",\n          fontWeight: \"800\",\n          margin: \"8px\",\n          textAlign: \"center\"\n        },\n        children: [stats.productivityChange.toFixed(0), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"black\",\n          fontSize: \"20px\",\n          fontWeight: \"400\",\n          textAlign: \"center\"\n        },\n        children: \"More productive this week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskItem, {\n      style: {\n        flexDirection: \"column\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Most productive time of day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#276cab\",\n          fontSize: \"56px\",\n          fontWeight: \"800\",\n          margin: \"8px\"\n        },\n        children: stats.productiveTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskItem, {\n      style: {\n        flexDirection: \"column\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Most productive day of the week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#276cab\",\n          fontSize: \"56px\",\n          fontWeight: \"800\",\n          margin: \"8px\"\n        },\n        children: stats.productiveDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskItem, {\n      style: {\n        flexDirection: \"column\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Most productive task type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#276cab\",\n          fontSize: \"56px\",\n          fontWeight: \"800\",\n          margin: \"8px\"\n        },\n        children: stats.productiveCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Stats, \"hRNWWgLGVOB+8d8uEbJ4sQeSv94=\");\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useEffect","useState","TaskGroup","TaskItem","jsxDEV","_jsxDEV","Stats","_s","stats","setStats","completionRate","productivityChange","productiveTime","productiveDay","productiveCategory","loading","setLoading","fetchStats","response","fetch","method","headers","Authorization","localStorage","getItem","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","flex","padding","border","borderRadius","boxShadow","color","fontSize","fontWeight","margin","textAlign","toFixed","flexDirection","_c","$RefreshReg$"],"sources":["/Users/gowrisankara/Desktop/planr/src/components/Stats.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TaskGroup, TaskItem } from \"./Utility\";\n\nfunction Stats() {\n    const [stats, setStats] = useState({\n        completionRate: 0,\n        productivityChange: 0,\n        productiveTime: 'N/A',\n        productiveDay: 'N/A',\n        productiveCategory: 'N/A',\n    });\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchStats = async () => {\n            try {\n                const response = await fetch(\"http://localhost:5000/stats\", {\n                    method: \"GET\",\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('jwt')}`, // Adjust based on your auth method\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch stats\");\n                }\n\n                const data = await response.json();\n                setStats(data);\n            } catch (error) {\n                console.error(\"Error fetching stats:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchStats();\n    }, []);\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    return (\n        <TaskGroup style={{ flex: '0 0 35%', padding: '20px', border: '1px solid #ccc', borderRadius: '8px', boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)' }}>\n            <h2>Your Stats</h2>\n            <TaskItem>\n                <p style={{ color: \"#276cab\", fontSize: \"60px\", fontWeight: \"800\", margin: \"8px\", textAlign: \"center\" }}>{stats.completionRate.toFixed(0)}%</p>\n                <p style={{ color: \"black\", fontSize: \"20px\", fontWeight: \"400\", textAlign: \"center\" }}>Task completion rate</p>\n            </TaskItem>\n            <TaskItem>\n                <p style={{ color: \"#008b10\", fontSize: \"60px\", fontWeight: \"800\", margin: \"8px\", textAlign: \"center\" }}>{stats.productivityChange.toFixed(0)}%</p>\n                <p style={{ color: \"black\", fontSize: \"20px\", fontWeight: \"400\", textAlign: \"center\" }}>More productive this week</p>\n            </TaskItem>\n\n            <TaskItem style={{ flexDirection: \"column\", textAlign: \"center\" }}>\n                <h3>Most productive time of day</h3>\n                <p style={{ color: \"#276cab\", fontSize: \"56px\", fontWeight: \"800\", margin: \"8px\" }}>{stats.productiveTime}</p>\n            </TaskItem>\n            <TaskItem style={{ flexDirection: \"column\", textAlign: \"center\" }}>\n                <h3>Most productive day of the week</h3>\n                <p style={{ color: \"#276cab\", fontSize: \"56px\", fontWeight: \"800\", margin: \"8px\" }}>{stats.productiveDay}</p>\n            </TaskItem>\n            <TaskItem style={{ flexDirection: \"column\", textAlign: \"center\" }}>\n                <h3>Most productive task type</h3>\n                <p style={{ color: \"#276cab\", fontSize: \"56px\", fontWeight: \"800\", margin: \"8px\" }}>{stats.productiveCategory}</p>\n            </TaskItem>\n        </TaskGroup>\n    );\n}\n\nexport default Stats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}